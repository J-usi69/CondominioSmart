# Generated by Django 5.2.6 on 2025-09-24 06:21

import app.models.pago
import app.models.visita
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True)),
                ('bloque', models.CharField(blank=True, max_length=10, null=True)),
                ('estado', models.CharField(default='DISPONIBLE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'apartamentos',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='AreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=80, unique=True)),
                ('estado', models.CharField(default='ACTIVO', max_length=20)),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True)),
                ('reglas', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'servicios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Visitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('ci', models.CharField(blank=True, max_length=30, null=True)),
                ('celular', models.CharField(blank=True, max_length=30, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'visitantes',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('ci', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d+$', 'El CI debe contener solo números.')], verbose_name='CI')),
                ('rol', models.CharField(choices=[('ADMIN', 'Admin'), ('EMPLEADO', 'Empleado'), ('RESIDENTE', 'Residente'), ('DUEÑO', 'Dueño')], default='RESIDENTE', max_length=10)),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='usuarios/fotos/')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.DateField(help_text='Usa el primer día del mes, p. ej. 2025-09-01')),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('pagado', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('saldo', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PARCIAL', 'Parcialmente pagado'), ('PAGADO', 'Pagado')], default='PENDIENTE', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cargos', to='app.apartamento')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cargos_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cargos',
                'ordering': ['-periodo', '-created_at'],
                'unique_together': {('apartamento', 'periodo')},
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('QR', 'QR'), ('EFECTIVO', 'Efectivo')], max_length=10)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comprobante', models.FileField(blank=True, null=True, upload_to=app.models.pago.upload_comprobante)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('APROBADO', 'Aprobado'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=10)),
                ('fecha_verificacion', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='app.cargo')),
                ('pagador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagos_realizados', to=settings.AUTH_USER_MODEL)),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_verificados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pagos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.CharField(choices=[('PENDIENTE', 'PENDIENTE'), ('APROBADA', 'APROBADA'), ('CANCELADA', 'CANCELADA'), ('COMPLETADA', 'COMPLETADA')], default='PENDIENTE', max_length=12)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('descripcion', models.TextField(blank=True)),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to='app.areacomun')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='DetalleReserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='app.reserva')),
            ],
        ),
        migrations.CreateModel(
            name='Residencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='residencias', to='app.apartamento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residencias', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'residencias',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CargoServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='app.cargo')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='en_cargos', to='app.servicio')),
            ],
            options={
                'db_table': 'cargos_servicios',
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=15, unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=150, null=True)),
                ('pase_conocido', models.BooleanField(default=False)),
                ('activo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vehiculos', to='app.apartamento')),
            ],
            options={
                'db_table': 'vehiculos',
                'ordering': ['placa'],
            },
        ),
        migrations.CreateModel(
            name='Visita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detalle', models.CharField(blank=True, max_length=200, null=True)),
                ('fecha', models.DateField(default=django.utils.timezone.localdate)),
                ('hora_inicio', models.TimeField(default=app.models.visita.current_local_time)),
                ('hora_salida', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visitas', to='app.apartamento')),
                ('cerrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitas_cerradas', to=settings.AUTH_USER_MODEL)),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitas_registradas', to=settings.AUTH_USER_MODEL)),
                ('vehiculo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitas', to='app.vehiculo')),
                ('visitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visitas', to='app.visitante')),
            ],
            options={
                'db_table': 'visitas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Propiedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='propiedades', to='app.apartamento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propiedades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'propiedades',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('fecha_fin__isnull', True)), fields=('apartamento',), name='uniq_propiedad_activa_por_apartamento')],
            },
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['area_comun', 'fecha'], name='app_reserva_area_co_d4c376_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['estado'], name='app_reserva_estado_b452ef_idx'),
        ),
        migrations.AddConstraint(
            model_name='residencia',
            constraint=models.UniqueConstraint(condition=models.Q(('fecha_fin__isnull', True)), fields=('usuario',), name='uniq_residencia_activa_por_usuario'),
        ),
        migrations.AlterUniqueTogether(
            name='cargoservicio',
            unique_together={('cargo', 'servicio')},
        ),
        migrations.AddIndex(
            model_name='vehiculo',
            index=models.Index(fields=['placa'], name='vehiculos_placa_0848cc_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiculo',
            index=models.Index(fields=['apartamento', 'placa'], name='vehiculos_apartam_3959a3_idx'),
        ),
        migrations.AddIndex(
            model_name='visita',
            index=models.Index(fields=['fecha', 'apartamento'], name='visitas_fecha_7f5e9b_idx'),
        ),
        migrations.AddIndex(
            model_name='visita',
            index=models.Index(fields=['visitante', 'apartamento'], name='visitas_visitan_5ca15e_idx'),
        ),
    ]
